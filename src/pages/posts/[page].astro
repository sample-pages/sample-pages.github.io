---
import Layout from "../../layouts/Layout.astro";

type Frontmatter = {
  draft: boolean;
  pubDate: string;
  title: string;
  date: string;
  update?: string;
  description: string;
  tags: string[];
};

type Post = {
  frontmatter: Frontmatter;
  url: string;
};

type Pagination = {
  data: Post[];
  url: {
    current?: string;
    next?: string;
    prev?: string;
  };
  currentPage: number;
  lastPage: number;
};

export async function getStaticPaths({ paginate }: { paginate: any }) {
  const allPosts: any = await Astro.glob("./*.md");
  const nonDraftPosts: any = allPosts.filter(
    (post: any) => !post.frontmatter.draft
  );

  const sortedPosts: any = nonDraftPosts.sort((a: any, b: any) => {
    const aDate = new Date(a.frontmatter.pubDate);
    const bDate = new Date(b.frontmatter.pubDate);
    return bDate.getTime() - aDate.getTime();
  });
  return paginate(sortedPosts, { pageSize: 10 });
}

const { page } = Astro.props as { page: Pagination };

const allPosts = await Astro.glob("./*.md");

// ★ ここで uniqueTags を定義
const uniqueTags = [
  ...new Set(allPosts.map((post) => post.frontmatter.tags).flat())
];

// タグ名ごとの色を定義
const tagColors: Record<string, string> = {
  お知らせ: "bg-red-400",
  // 追加のタグはここに書く
};
---

<Layout title="お知らせ｜第8回うぃーすた全国交流会">
  <div class="mt-[130px] lg:mt-[140px] margin-contents text-color zen-kaku-gothic-new" style="margin-bottom: 80px;">
    <div style="height: 10px;"></div>
    <span class="midashi">お知らせ</span>
    <div style="height: 10px;"></div>

    {uniqueTags.map((tag) => (
      <>
        <a class="text-lg" style="padding-left: 0.25rem">＃</a>
        <a
          class="text-base max-lg:text-sm hover-color"
          style="margin-left:0px; margin-right: 10px; border-bottom: 2px dashed;"
          href={`/tags/${tag}`}
        >
          {tag}
        </a>
      </>
    ))}

    <div style="height: 20px;"></div>
    <ul style="padding-left: 0.25rem">
      {page.data.map((post: any) => (
        <li>
          <div class="flex items-center gap-2 flex-wrap">
            {/* 日付 */}
            {post.frontmatter.update ? (
              <div class="update-content flex items-center gap-1">
                <a class="text-sm">{post.frontmatter.date}</a>
                <a class="text-sm text-red-500">{post.frontmatter.update}</a>
              </div>
            ) : (
              <div class="mb-[3px] no-update-content mr-2">
                <a class="text-base max-lg:text-[14px]">{post.frontmatter.date}</a>
              </div>
            )}

            {/* タグ */}
            {post.frontmatter.tags && (
              <div class="flex gap-1 flex-wrap mr-2">
                {post.frontmatter.tags.map((tag: string) => (
                  <span
                    class={`text-xs px-2 py-[2px] rounded-full text-white ${
                      tagColors[tag] || "bg-gray-500"
                    }`}
                  >
                    {tag}
                  </span>
                ))}
              </div>
            )}

            {/* タイトル */}
            <a
              class="lg:mb-[3px] text-lg max-lg:text-[15px] font-medium hover-color"
              href={post.url}
            >
              {post.frontmatter.title}
            </a>
          </div>

          {/* 説明文 */}
          <a class="text-base block mt-1">{post.frontmatter.description}</a>
          <div style="height: 24px;" />
        </li>
      ))}
    </ul>

    {/* ページネーション */}
    <div style="height: 15px;"></div>
    <div
      style="text-align: center; align-items: center; justify-content: center; margin: auto; display: flex;"
    >
      {page.url.prev ? (
        <a
          href={page.url.prev}
          class="hover-color"
          style="margin-left: 10px; margin-right: 10px; display: flex; align-items: center; font-size: 15px;"
        >
          <i class="ri-arrow-left-line" style="font-size: 24px;" />
          &nbsp;&nbsp;
        </a>
      ) : (
        <a
          class="null-color"
          style="margin-left: 10px; margin-right: 10px; display: flex; align-items: center; font-size: 15px;"
        >
          <i class="ri-arrow-left-line" style="font-size: 24px;" />
          &nbsp;&nbsp;
        </a>
      )}

      <div style="margin-left: 10px; margin-right: 10px; font-size: 15px;">
        {page.currentPage}&nbsp;/&nbsp;{page.lastPage}
      </div>

      {page.url.next ? (
        <a
          href={page.url.next}
          class="hover-color"
          style="margin-left: 10px; margin-right: 10px; display: flex; align-items: center; font-size: 15px;"
        >
          &nbsp;&nbsp;
          <i class="ri-arrow-right-line" style="font-size: 24px;" />
        </a>
      ) : (
        <a
          class="null-color"
          style="margin-left: 10px; margin-right: 10px; display: flex; align-items: center; font-size: 15px;"
        >
          &nbsp;&nbsp;
          <i class="ri-arrow-right-line" style="font-size: 24px;" />
        </a>
      )}
    </div>
    <div style="height: 70px;"></div>
  </div>
</Layout>
