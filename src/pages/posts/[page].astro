---
import Layout from "../../layouts/Layout.astro";

type Frontmatter = {
  draft: boolean;
  pubDate: string;
  title: string;
  date: string;
  update?: string;
  description: string;
  tags: string[];
};

type Post = {
  frontmatter: Frontmatter;
  url: string;
};

type Pagination = {
  data: Post[];
  url: {
    current?: string;
    next?: string;
    prev?: string;
  };
  currentPage: number;
  lastPage: number;
};

export async function getStaticPaths({ paginate }: { paginate: any }) {
  const allPosts: any = await Astro.glob("./*.md");
  const nonDraftPosts: any = allPosts.filter(
    (post: any) => !post.frontmatter.draft
  );

  const sortedPosts: any = nonDraftPosts.sort((a: any, b: any) => {
    const aDate = new Date(a.frontmatter.pubDate);
    const bDate = new Date(b.frontmatter.pubDate);
    return bDate.getTime() - aDate.getTime();
  });
  return paginate(sortedPosts, { pageSize: 10 });
}

const { page } = Astro.props as { page: Pagination };

// ★ ここで uniqueTags を定義

// タグ名ごとの色を定義
const tagColors: Record<string, string> = {
  // 追加のタグはここに書く
};
---

<Layout title="お知らせ｜第8回うぃーすた全国交流会">
  <div class="mt-[80px] lg:mt-[78px] bg-[#fffdfd] border-b-[4px] border-red-100 w-full h-72 flex flex-col justify-center pl-8 zen-kaku-gothic-new">
    <span class="ml-10 max-md:ml-1 text-[50px] font-bold outline-text tracking-widest">NEWS</span>
    <span class="ml-10 max-md:ml-1 text-[20px]">お知らせ</span>
  </div>
  <div class="bg-white/30 text-color zen-kaku-gothic-new text-sm lg:text-base" style="line-height: 2.05;">
    <div class="margin-contents pt-8 md:px-12 max-md:px-6">

    <div class="h-[10px] md:h-[40px]"></div>

    <ul class="margin-default" style="padding-left: 0.25rem">
      {page.data.map((post: any) => (
        <li>
          <div class="flex flex-wrap items-center gap-1">
            {/* 1行目: 日付 + タグ */}
            <div class="w-full md:w-auto flex flex-wrap items-center gap-1 mb-1 md:mb-0">
              {/* 日付 */}
              {post.frontmatter.update ? (
                <div class="update-content flex items-center gap-1">
                  <a class="text-sm md:text-base">{post.frontmatter.date}</a>
                  <a class="text-sm md:text-base text-red-500">{post.frontmatter.update}</a>
                </div>
              ) : (
                <div class="no-update-content mr-2">
                  <a class="text-base md:text-base">{post.frontmatter.date}</a>
                </div>
              )}

              {/* タグ */}
              {post.frontmatter.tags && (
  <div class="flex gap-1 flex-wrap mr-2">
    {post.frontmatter.tags.map((tag: string) => (
      <span
        class="text-xs px-2 py-[2px] rounded-full text-black border-[1px] border-red-300"
        style={{ backgroundColor: tagColors[tag] || "#ffffff" }}
      >
        {tag}
      </span>
    ))}
  </div>
)}
            </div>

            {/* 2行目: タイトル */}
            <a
              class="md:w-auto text-[15px] md:text-base font-medium hover-color"
              href={post.url}
            >
              {post.frontmatter.title}
            </a>
          </div>



          {/* 説明文 */}
          <a class="text-base block mt-1">{post.frontmatter.description}</a>
          <div style="height: 20px;" />
        </li>
      ))}
    </ul>

    {/* ページネーション */}
    <div style="height: 30px;"></div>
    <div
      style="text-align: center; align-items: center; justify-content: center; margin: auto; display: flex;"
    >
      {page.url.prev ? (
        <a
          href={page.url.prev}
          class="hover-color"
          style="margin-left: 10px; margin-right: 10px; display: flex; align-items: center; font-size: 15px;"
        >
          <i class="ri-arrow-left-line" style="font-size: 24px;" />
          &nbsp;&nbsp;
        </a>
      ) : (
        <a
          class="null-color"
          style="margin-left: 10px; margin-right: 10px; display: flex; align-items: center; font-size: 15px;"
        >
          <i class="ri-arrow-left-line" style="font-size: 24px;" />
          &nbsp;&nbsp;
        </a>
      )}

      <div style="margin-left: 10px; margin-right: 10px; font-size: 15px;">
        {page.currentPage}&nbsp;/&nbsp;{page.lastPage}
      </div>

      {page.url.next ? (
        <a
          href={page.url.next}
          class="hover-color"
          style="margin-left: 10px; margin-right: 10px; display: flex; align-items: center; font-size: 15px;"
        >
          &nbsp;&nbsp;
          <i class="ri-arrow-right-line" style="font-size: 24px;" />
        </a>
      ) : (
        <a
          class="null-color"
          style="margin-left: 10px; margin-right: 10px; display: flex; align-items: center; font-size: 15px;"
        >
          &nbsp;&nbsp;
          <i class="ri-arrow-right-line" style="font-size: 24px;" />
        </a>
      )}
    </div>
    <div style="height: 150px;"></div>
  </div>
  </div>
</Layout>