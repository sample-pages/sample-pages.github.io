---
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import "katex/dist/katex.min.css";

import "remixicon/fonts/remixicon.css";
import "../styles/output.css";

const { title } = Astro.props;
---

<!doctype html>
<html lang="ja">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
    <link rel="stylesheet" href="../styles/output.css" />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css"
      integrity="sha384-vKruj+a13U8yHIkAyGgK1J3ArTLzrFGBbBc0tDp4ad/EyewESeXE/Iv67Aj8gKZ0"
      crossorigin="anonymous"
    />
    <!-- ファビコン -->
    <link rel="icon" type="image/png" href="/images/logo.png">

    <!-- iOS ホーム画面用 -->
    <link rel="apple-touch-icon" href="/images/apple-touch-icon.png">


    <title>{title}</title>
    <meta name="description" content="『第8回うぃーすた全国交流会』を2026年7月18日(土)〜19日(日)に大阪にて開催します！">
    <script>
// --- 初期設定 ---
let targetScroll = window.scrollY;

// --- PC マウスホイールのみ ---
if (!('ontouchstart' in window)) {
  window.addEventListener("wheel", (e: WheelEvent) => {
    e.preventDefault(); // デフォルトスクロール停止

    targetScroll += e.deltaY * 0.7; // スクロール量調整
    targetScroll = Math.max(0, Math.min(document.body.scrollHeight - window.innerHeight, targetScroll));
  }, { passive: false });

  // --- スムーズスクロール ---
  function smoothScroll() {
    const currentScroll = window.scrollY;
    const diff = targetScroll - currentScroll;

    if (Math.abs(diff) > 0.5) {
      window.scrollTo(0, currentScroll + diff * 0.1);
    }

    requestAnimationFrame(smoothScroll);
  }

  smoothScroll();
}

window.addEventListener('load', () => {
  // すでに表示済みならスキップ（同じセッション内）
  if (sessionStorage.getItem("welcomeShown")) return;

  const overlay = document.createElement('div');
  overlay.style.cssText = `
    position: fixed;
    top: 0; left: 0;
    width: 100vw; height: 100vh;
    display: flex;
    justify-content: center; align-items: center;
    background: rgba(256, 256, 256, 1);
    z-index: 9999;
  `;

  const container = document.createElement('div');
  container.style.cssText = `width: 90%; text-align: center;`;

  const line1 = document.createElement('div');
  line1.textContent = "吃音のある同年代の仲間たちと";
  line1.classList.add("zen-kaku-gothic-new", "load-fsize");
  line1.style.cssText = `color:black;opacity:0;transition:opacity 1s;text-align:center;`;

  const line2 = document.createElement('div');
  line2.textContent = "悩みや夢を語り合う、";
  line2.classList.add("zen-kaku-gothic-new", "load-fsize");
  line2.style.cssText = `color:black;opacity:0;transition:opacity 1s;margin-top:0.5rem;text-align:center;`;

  const line3 = document.createElement('div');
  line3.textContent = "かけがえのない時間を過ごしてみませんか？";
  line3.classList.add("zen-kaku-gothic-new", "load-fsize");
  line3.style.cssText = `color:black;opacity:0;transition:opacity 1s;margin-top:0.5rem;text-align:center;`;

  container.appendChild(line1);
  container.appendChild(line2);
  container.appendChild(line3);
  overlay.appendChild(container);
  document.body.appendChild(overlay);

  // フェードイン順
  setTimeout(() => line1.style.opacity = "1", 800);
  setTimeout(() => line2.style.opacity = "1", 2500);
  setTimeout(() => line3.style.opacity = "1", 5000);

  // 全体フェードアウト
  setTimeout(() => {
    overlay.style.transition = 'opacity 1s';
    overlay.style.opacity = "0";
    setTimeout(() => overlay.remove(), 1000);
  }, 7000);

  // 表示済みフラグをセッションに保存
  sessionStorage.setItem("welcomeShown", "true");
});








    </script>
  </head>
  <!--style="overscroll-behavior-y: none;" -->
  <body class="margin-body flex flex-col min-h-screen overflow-x-hidden" id="page-top">
    <Header />
    <main class="grow">
      <slot />
    </main>
    <Footer />
  </body>
</html>
